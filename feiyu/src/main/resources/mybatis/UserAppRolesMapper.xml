<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.github.kelylm.repository.UserAppRolesDao">

	<resultMap id="resultMap" type="com.github.kelylm.entity.UserAppRoles">
		<result property="id" column="id" />
		<result property="userId" column="user_id" />
		<result property="appId" column="app_id" />
		<result property="roleIds" column="role_ids" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		id,user_id,app_id,role_ids
	</sql>

	<!-- 获取用户: 输出直接映射到对象 -->
	<select id="get" parameterType="Long" resultType="UserAppRoles">
		SELECT
		<include refid="columns" />
		FROM sys_user_app_roles
		WHERE id=#{id}
	</select>


	<!-- 查询用户, 不分页 -->
	<select id="search" parameterType="map" resultMap="resultMap">
		SELECT
		<include refid="columns" />
		FROM sys_user_app_roles
		<where>
			<if test="userId != null and userId != ''">
				AND user_id = #{userId}
			</if>
			<if test="appId != null and appId != ''">
				AND app_id = #{appId}
			</if>
			<if test="roleIds != null and roleIds != ''">
				AND role_ids = #{roleIds}
			</if>
		</where>
	</select>

	<!-- 分页查询 -->
	<select id="searchPage" resultMap="resultMap">
		SELECT
		<include refid="columns" />
		FROM sys_user_app_roles
		<where>
			<if test="searchFields.userId != null and searchFields.userId != ''">
				AND user_id = #{searchFields.userId}
			</if>
			<if test="searchFields.appId != null and searchFields.appId != ''">
				AND app_id = #{searchFields.appId}
			</if>
			<if test="searchFields.roleIds != null and searchFields.roleIds != ''">
				AND role_ids = #{searchFields.roleIds}
			</if>
		</where>
	</select>

	<!-- 新增 -->
	<insert id="insert" parameterType="UserAppRoles"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO sys_user_app_roles (
		user_id,
		app_id,
		role_ids
		) VALUES (
		#{userId},
		#{appId},
		#{roleIds}
		)
	</insert>

	<!-- 更新 -->
	<update id="update">
		UPDATE sys_user_app_roles
		<set>
			user_id = #{userId},
			app_id = #{appId},
			role_ids = #{roleIds}
		</set>
		WHERE
		id = #{id}
	</update>

	<!-- 删除用户 -->
	<delete id="delete" parameterType="Long">
		DELETE FROM sys_user_app_roles WHERE id=#{id}
	</delete>
</mapper> 
