<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.github.kelylm.repository.AppDao">

	<resultMap id="resultMap" type="com.github.kelylm.entity.App">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="appKey" column="app_key" />
		<result property="appSecret" column="app_secret" />
		<result property="available" column="available" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		id,name,app_key,app_secret,available
	</sql>

	<!-- 获取用户: 输出直接映射到对象 -->
	<select id="get" parameterType="Long" resultType="App">
		SELECT
		<include refid="columns" />
		FROM sys_app
		WHERE id=#{id}
	</select>


	<!-- 查询用户, 不分页 -->
	<select id="search" parameterType="map" resultMap="resultMap">
		SELECT
		<include refid="columns" />
		FROM sys_app
		<where>
			<if test="name != null and name != ''">
				AND name = #{name}
			</if>
			<if test="appKey != null and appKey != ''">
				AND app_key = #{appKey}
			</if>
			<if test="appSecret != null and appSecret != ''">
				AND app_secret = #{appSecret}
			</if>
			<if test="available != null and available != ''">
				AND available = #{available}
			</if>
		</where>
	</select>

	<!-- 分页查询 -->
	<select id="searchPage" resultMap="resultMap">
		SELECT
		<include refid="columns" />
		FROM sys_app
		<where>
			<if test="searchFields.name != null and searchFields.name != ''">
				AND name = #{searchFields.name}
			</if>
			<if test="searchFields.appKey != null and searchFields.appKey != ''">
				AND app_key = #{searchFields.appKey}
			</if>
			<if test="searchFields.appSecret != null and searchFields.appSecret != ''">
				AND app_secret = #{searchFields.appSecret}
			</if>
			<if test="searchFields.available != null and searchFields.available != ''">
				AND available = #{searchFields.available}
			</if>
		</where>
	</select>

	<!-- 新增 -->
	<insert id="insert" parameterType="App" useGeneratedKeys="true"
		keyProperty="id">
		INSERT INTO sys_app (
		name,
		app_key,
		app_secret,
		available
		) VALUES (
		#{name},
		#{appKey},
		#{appSecret},
		#{available}
		)
	</insert>

	<!-- 更新 -->
	<update id="update">
		UPDATE sys_app
		<set>
			name = #{name},
			app_key = #{appKey},
			app_secret = #{appSecret},
			available = #{available}
		</set>
		WHERE
		id = #{id}
	</update>

	<!-- 删除用户 -->
	<delete id="delete" parameterType="Long">
		DELETE FROM sys_app WHERE id=#{id}
	</delete>
</mapper> 
